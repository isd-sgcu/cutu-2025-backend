definitions:
  domain.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      foodLimitation:
        type: string
      id:
        type: string
      imageURL:
        type: string
      invitationCode:
        type: string
      name:
        type: string
      phone:
        type: string
      sizeJersey:
        type: string
      state:
        type: string
      university:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/users:
    get:
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "500":
          description: Failed to fetch users
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Get all users
  /api/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Failed to create user
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Register a new user
swagger: "2.0"
